"""
Generated by qenerate plugin=pydantic_v1. DO NOT MODIFY MANUALLY!
"""
from pathlib import Path  # noqa: F401 # pylint: disable=W0611
from typing import Optional, Union  # noqa: F401 # pylint: disable=W0611

from pydantic import (  # noqa: F401 # pylint: disable=W0611
    BaseModel,
    Extra,
    Field,
    Json,
)


def query_string() -> str:
    with open(f"{Path(__file__).parent}/cloudflare_workers.gql", "r") as f:
        return f.read()


class CloudflareAccountV1(BaseModel):
    name: str = Field(..., alias="name")

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareZoneV1(BaseModel):
    name: str = Field(..., alias="name")
    account: CloudflareAccountV1 = Field(..., alias="account")

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareWorkerScriptContentFromGithubV1(BaseModel):
    repo: str = Field(..., alias="repo")
    path: str = Field(..., alias="path")
    ref: str = Field(..., alias="ref")

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareWorkerScriptV1(BaseModel):
    name: str = Field(..., alias="name")
    content_from_github: CloudflareWorkerScriptContentFromGithubV1 = Field(
        ..., alias="content_from_github"
    )

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareWorkerV1(BaseModel):
    zone: CloudflareZoneV1 = Field(..., alias="zone")
    name: str = Field(..., alias="name")
    pattern: str = Field(..., alias="pattern")
    script: CloudflareWorkerScriptV1 = Field(..., alias="script")

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareWorkersQueryData(BaseModel):
    workers: Optional[list[CloudflareWorkerV1]] = Field(..., alias="workers")

    class Config:
        smart_union = True
        extra = Extra.forbid
